GitHub Branches

Objectives
 . Explain the purpose of Branches 
 . Describe how to merge changes into branches

What are Branches? 
 . All files in GitHub are stored in a branch. 
 . The Master Branch is definitive. It stores the deployable
   version of the code. 
 . When you plan to change things, you create a new branch
   and give it a descriptive name. This new branch starts as 
   the exact copy of the original branch. 
 . As changes are made, the branch that we created holds The
   changed code. 

Merging Branches
 GitHub branches can be very confusing for big projects
 For a simple project, consider the following: 
  . Start with a common base. 
  . The code is branched while new features are developed
  . Both branches are undergoing changes
  . When the two streams of work are ready to merge, each
    branch's code is identified as a tip and the two tips
    are merged into a third, combining a branch. 

Make a Commit
 . Saced changes are called commits
 . To change the contents of a file:
    - Select File 
    - Click pencil icon
    - make changes
    - scroll down to find "Commit Changes"
 . Commit indicates that the developer is convinced that
   the code represents a stable platform for the feature
   or a set of features being developed. 
 . When the developer commits changed source to their path,
   they are required to write a comment that describes the
   changes. The comments should be meaningful and
   descriptive. 
 . The developer can commit to the current branch or create
   a new branch. 
 . Some Good Practices:
    - Don't end the commit message with a period. 
    - Keep commit message under 50 characters. 
    - Always write in an "active" voice. 

What is a Pull Request?
 . A pull request makes the proposed changes availabe for
   others to review and use. 
 . A pull can follow any commits, even if the code is 
   unfinished. 
 . A pull requires a user to approve the changes. This can
   be the author of the change or it can be assigned within
   the team. 
 . GitHub automatically makes a pull request on your behalf
   if you make a change on a branch that you don't own. 
 . The log files are immutable. So, it is always possible
   to find the person who approved the merge of the change.

Open a Pull Request
 . Click Pull Requests and select New Pull Request
 . Select the branch from the compare box. 
 . Scroll down to view the changes. 
 . Confirm that the changes are what you want to assess. 
 . Add a title and description to the request.   
 . Click "Create Pull Request"

Merging into the Master Branch
 . The master branch should be the only deployed code
 . Developers can change source files in a branch but
   the changes aren't released until:
    - They are comitted
    - The Pull command is issued
    - the code is reviewed and approved
    - The approved code is merged back into the master code.
 

Merge a Pull Request
 . To merge a committed code change into your master code
    - Click "merge pull request"
    - Click "confirm merge"
    - Delete the obsolete Branch